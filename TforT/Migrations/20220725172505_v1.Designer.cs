// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TforT.DataBase;

namespace TforT.Migrations
{
    [DbContext(typeof(realContext))]
    [Migration("20220725172505_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("TforT.Models.Mobile", b =>
                {
                    b.Property<int>("MobileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Number")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MobileId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("mobiles");
                });

            modelBuilder.Entity("TforT.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("MobileId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TforT.Models.UserContacts", b =>
                {
                    b.Property<int>("UserContactsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MobileId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserContactsId");

                    b.HasIndex("MobileId");

                    b.HasIndex("UserId");

                    b.ToTable("userContacts");
                });

            modelBuilder.Entity("TforT.Models.Mobile", b =>
                {
                    b.HasOne("TforT.Models.User", "user")
                        .WithOne("mobile")
                        .HasForeignKey("TforT.Models.Mobile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("TforT.Models.UserContacts", b =>
                {
                    b.HasOne("TforT.Models.Mobile", "mobile")
                        .WithMany("Contacts")
                        .HasForeignKey("MobileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TforT.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mobile");

                    b.Navigation("user");
                });

            modelBuilder.Entity("TforT.Models.Mobile", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("TforT.Models.User", b =>
                {
                    b.Navigation("mobile");
                });
#pragma warning restore 612, 618
        }
    }
}
